Start Here:
----------
https://realpython.com/get-started-with-django-1/
https://www.ahmedbouchefra.com/blog/django-3-tutorial-and-crud-example-with-mysql-and-bootstrap
https://www.javatpoint.com/django-crud-application
https://adiramadhan17.medium.com/django-crud-with-forms-and-bootstrap-template-73af33d8f016
https://adiramadhan17.medium.com/class-based-view-crud-django-with-bootstraptemplate-b241600ee021
https://www.google.com/search?client=firefox-b-d&q=django+bootstrap+template
https://www.javatpoint.com/django-and-bootstrap
https://dev.to/sm0ke/bootstrap-5-free-django-templates-4pi0
https://themeforest.net/search/django%20bootstrap
https://www.creative-tim.com/templates/django-free
https://medium.com/geekculture/save-time-with-this-django-template-bootstrap-admin-7bdbf97813a7
https://medium.com/@johnthuo/creating-a-hospital-management-system-with-django-f8dff2ffcc98
https://medium.com/@alex.kirkup/creating-dynamic-labels-for-django-form-fields-9c4d809da651
https://www.fullstackpython.com/blog/bootstrap-4-django-template.html
https://adiramadhan17.medium.com/django-crud-with-forms-and-bootstrap-template-73af33d8f016
https://efficientcoder.net/django-3-tutorial-and-crud-example-with-mysql-and-bootstrap/
https://www.google.com/search?q=django+mysql+bootstrap+crud+application&sxsrf=ALiCzsax0Q2Pw2alPo0i6exEtCuMAaOMow%3A1666198342883&source=hp&ei=RitQY_6FM-OI4-EPxaS2yAE&iflsig=AJiK0e8AAAAAY1A5Vrruw69HBP8EeMXhLdvVMjLDu5RK&ved=0ahUKEwj-wObC4Oz6AhVjxDgGHUWSDRkQ4dUDCAc&uact=5&oq=django+mysql+bootstrap+crud+application&gs_lcp=Cgdnd3Mtd2l6EAMyBAgjECc6BAgAEEM6BwguENQCEEM6BQgAEJECOhEILhCABBCxAxCDARDHARDRAzoKCAAQsQMQgwEQQzoKCC4QsQMQ1AIQQzoLCC4QgAQQsQMQ1AI6CAgAEIAEELEDOgUIABCiBDoHCAAQHhCiBFAAWPGAAWCNjAFoAHAAeACAAb0DiAHVCpIBCTAuMS4yLjEuMZgBAKABAQ&sclient=gws-wiz#scso=_WitQY_DmDbGVjuMPmZWCsAM_38:312
--------------------------------------------------------------------------------------------------------------------------------------------------------

The below excersise is performed by referring to the below links

https://django-bootstrap-v5.readthedocs.io/en/latest/
https://www.codeproject.com/Articles/5256610/Django-3-Tutorial-CRUD-Example-with-MySQL-and-Boot


import sys
print(sys.path)

Run E:\GSReddy\Projects\django\OctaEdX>virtualenv --python="C:\Python\Python310\python.exe" pynewenv

Run E:\GSReddy\Projects\django\OctaEdX>pynewenv\Scripts\activate.bat


Run (pynewenv) E:\GSReddy\Projects\pynewenv\Scripts>pip install django mysqlclient pandas

edit E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX\OctaEdX\settings.py

# Added By G.S.Reddy
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', 
        'NAME': 'octaedx',
        'USER': 'gsreddy',
        'PASSWORD': 'MySQL@123',
        'HOST': 'localhost',   
        'PORT': '3306',
    }    
}

Run (pynewenv) E:\GSReddy\Projects\pynewenv\Scripts>cd OctaEdX

Run (pynewenv) E:\GSReddy\Projects\pynewenv\Scripts>python manage.py migrate

Run (pynewenv) E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX>pip install django-widget-tweaks

edit E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX\OctaEdX\settings.py

# Added By G.S.Reddy
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks'
]


Run (pynewenv) E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX>python manage.py createsuperuser

Username (leave blank to use 'g.s.reddy'): gsreddy
Email address: gsreddy@octaedx.com
Password:django123
Password (again):django123
Superuser created successfully.

Run (pynewenv) E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX>python manage.py startapp octaedxcrud 
# application name changed purposefully as it throws the below exception if we run providing "octaedx" as application name here
# CommandError: 'E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX\octaedx' already exists

Step 7:

edit E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX\OctaEdX\settings.py and modify as below

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',
    'octaedxcrud' # Added by G.S.Reddy as part of Step 7
]

Edit E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX\octaedxcrud\models.py and append below code in the file

class Contact(models.Model):
    firstName = models.CharField("First name", max_length=255, blank = True, null = True)
    lastName = models.CharField("Last name", max_length=255, blank = True, null = True)
    email = models.EmailField()
    phone = models.CharField(max_length=20, blank = True, null = True)
    address = models.TextField(blank=True, null=True)
    description = models.TextField(blank=True, null=True)
    createdAt = models.DateTimeField("Created At", auto_now_add=True)
    
    def __str__(self):
        return self.firstName

Run (pynewenv) E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX>python manage.py makemigrations

Migrations for 'octaedxcrud':
  octaedxcrud\migrations\0001_initial.py
    - Create model Contact

Run (pynewenv) E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX>python manage.py migrate

Create E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX\octaedxcrud\forms.py and below code into it

from django import forms
from .models import Contact

class ContactForm(forms.ModelForm):
    class Meta:
        model = Contact
        fields = "__all__"

Edit E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX\octaedxcrud\views.py and append below code in the file

# Commented by G.S.Reddy
#from django.shortcuts import render

# Create your views here.

# Added by G.S.Reddy
from django.shortcuts import render, redirect, get_object_or_404
from .models import Contact
from .forms import ContactForm
from django.views.generic import ListView, DetailView

class IndexView(ListView):
    template_name = 'crudapp/index.html'
    context_object_name = 'contact_list'
    
    def get_queryset(self):
        return Contact.objects.all()

class ContactDetailView(DetailView):
    model = Contact
    template_name = 'crudapp/contact-detail.html'

def create(request):
    if request.method == 'POST':
        form = ContactForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('index')
    form = ContactForm()

    return render(request,'crudapp/create.html',{'form': form})

def edit(request, pk, template_name='crudapp/edit.html'):
    contact = get_object_or_404(Contact, pk=pk)
    form = ContactForm(request.POST or None, instance=post)
    if form.is_valid():
        form.save()
        return redirect('index')
    return render(request, template_name, {'form':form})

def delete(request, pk, template_name='crudapp/confirm_delete.html'):
    contact = get_object_or_404(Contact, pk=pk)
    if request.method=='POST':
        contact.delete()
        return redirect('index')
    return render(request, template_name, {'object':contact})

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
edit E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX\OctaEdX\settings.py modify as below

# Added by G.S.Reddy & Revist for 'DIRS': [os.path.join(BASE_DIR, 'templates')], if it throws any errors
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------

Create the following files inside the "octaedxcrud" folder:
Run (pynewenv) E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX>cd octaedxcrud
Run (pynewenv) E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX\octaedxcrud>mkdir templates
Run (pynewenv) E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX\octaedxcrud>cd templates
Run (pynewenv) E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX\octaedxcrud\templates>

Here create below files accordingly

base.html :
-----------
<!DOCTYPE html>
<html>
<head>
 <title>Django 3 CRUD Example</title>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" 
href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
</head>
<body>
{% block content %}
{% endblock %}
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" 
integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" 
crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" 
integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" 
crossorigin="anonymous"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
</body>
</html>

confirm_delete.html :
---------------------

{% extends 'crudapp/base.html' %}
{% block content %}
<div class="container">
    <div class="row"></div>
    <br />
    <div class="row">
        <div class="col-md-2 col-xs-2 col-sm-2"></div>
        <div class="col-md-10 col-xs-10 col-sm-10">
            <form method="post">
                {% csrf_token %}
                <div class="form-row">
                    <div class="alert alert-warning">
                        Are you sure you want to delete {{ object }}?
                    </div>
                </div>
                <button type="submit" class="btn btn-danger">
                    <span class="glyphicon glyphicon-trash"></span>
                </button>
            </form>
        </div>
    </div>
</div>
{% endblock %}


edit.html :
-----------

{% load widget_tweaks %}
<!DOCTYPE html>
<html>

<head>
    <title>Edit Contact</title>
    <meta charset="utf-8">
    <meta name="viewport" 
    content="width=device-width, initial-scale=1">
    <link rel="stylesheet" 
    href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
        integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" 
        crossorigin="anonymous">
    <style type="text/css">
        <style>
    </style>
    </style>

</head>

<body>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-1 col-xs-1 col-sm-1"></div>
        <div class="col-md-10 col-xs-10 col-sm-10 ">
            <br />
            <h6 style="text-align:center;">
                <font color="red"> All fields are required</font>
            </h6>
        </div>
        <div class="col-md-1 col-xs-1 col-sm-1">
        </div>
    </div>
    <div class="row">
        <div class="col-md-1 col-xs-1 col-sm-1"></div>
        <div class="col-md-10 col-xs-10 col-sm-10">
            <form method="post" novalidate>
                {% csrf_token %}
                {% for hidden_field in form.hidden_fields %}
                {{ hidden_field }}
                {% endfor %}
                {% for field in form.visible_fields %}
                <div class="form-group">
                    {{ field.label_tag }}
                    {% render_field field class="form-control" %}
                    {% if field.help_text %}
                    <small class="form-text text-muted">{{ field.help_text }}</small>
                    {% endif %}
                </div>
                {% endfor %}
                <button type="submit" class="btn btn-primary">submit</button>
            </form>
            <br>
        </div>
        <div class="col-md-1 col-xs-1 col-sm-1"></div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" 
integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" 
crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" 
integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" 
crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" 
integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" 
crossorigin="anonymous"></script>
</body>
</html>


index.html :
------------
{% extends 'crudapp/base.html' %}
{% block content %}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-1 col-xs-1 col-sm-1"></div>
        <div class="col-md-10 col-xs-10 col-sm-10">
            <h3 class="round3" style="text-align:center;">Contacts</h3>
        </div>
        <div class="col-md-1 col-xs-1 col-sm-1"></div>
    </div>
    <div class="row">
        <div class="col-md-10 col-xs-10 col-sm-10"></div>
        <div class="col-md-2 col-xs-1 col-sm-1">
            <br />
            <a href="{% url 'create' %}">
                <button type="button" class="btn btn-success">
                    <span class="glyphicon glyphicon-plus"></span>
                </button>
            </a>
        </div>
    </div>
    <br />
    {% for contact in contact_list %}
    <div class="row">
        <div class="col-md-1 col-xs-1 col-sm-1"></div>
        <div class="col-md-7 col-xs-7 col-sm-7">
            <ul class="list-group">

                <li class="list-group-item ">
                    <a href="{% url 'detail' contact.pk %}"> {{ contact.firstName }} 
                    {{contact.lastName}} </a> <span class="badge"></span>
                </li>
            </ul>
            <br>
        </div>
        <div class="col-md-1 col-xs-1 col-sm-1">
            <a href="{% url 'detail' contact.pk %}">
                <button type="button" class="btn btn-info">
                    <span class="glyphicon glyphicon-open"></span>
                </button>
            </a>
        </div>
        <div class="col-md-1">
            <a href="{% url 'edit' contact.pk %}">
                <button type="button" class="btn btn-info">
                    <span class="glyphicon glyphicon-pencil"></span>
                </button>
            </a>
        </div>
        <div class="col-md-1">
            <a href="{% url 'delete' contact.pk %}">
                <button type="button" class="btn btn-danger">
                    <span class="glyphicon glyphicon-trash"></span>
                </button>
            </a>
        </div>
        <div class="col-md-1 col-xs-1 col-sm-1"></div>
    </div>
    {% endfor %}
</div>
{% endblock %}



create.html :
-------------

{% load widget_tweaks %}
<!DOCTYPE html>
<html>

<head>
    <title>Posts</title>
    <meta charset="utf-8">
    <meta name="viewport" 
    content="width=device-width, initial-scale=1">
    <link rel="stylesheet" 
    href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
        integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" 
        crossorigin="anonymous">
    <style type="text/css">
        <style>
    </style>
    </style>

</head>

<body>

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-1 col-xs-1 col-sm-1"></div>

            <div class="col-md-10 col-xs-10 col-sm-10 ">
                <br />
                <h6 style="text-align:center;">
                    <font color="red"> All fields are required</font>
                </h6>
            </div>
            <div class="col-md-1 col-xs-1 col-sm-1">
            </div>
        </div>
        <div class="row">
            <div class="col-md-1 col-xs-1 col-sm-1"></div>
            <div class="col-md-10 col-xs-10 col-sm-10">
                <form method="post" novalidate>
                    {% csrf_token %}
                    {% for hidden_field in form.hidden_fields %}
                    {{ hidden_field }}
                    {% endfor %}
                    {% for field in form.visible_fields %}
                    <div class="form-group">
                        {{ field.label_tag }}
                        {% render_field field class="form-control" %}
                        {% if field.help_text %}
                        <small class="form-text text-muted">{{ field.help_text }}</small>
                        {% endif %}
                    </div>
                    {% endfor %}
                    <button type="submit" class="btn btn-primary">post</button>
                </form>
                <br>
            </div>
            <div class="col-md-1 col-xs-1 col-sm-1"></div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
        integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"
        integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49"
        crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"
        integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy"
        crossorigin="anonymous"></script>
</body>

</html>


contact-detail.html :
---------------------
XXXXXXX

----------------------------------------------------------------------------------------------------------------------------------------------------------

Edit E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX\OctaEdX\urls.py

# Commented By G.S.Reddy
# from django.contrib import admin
# from django.urls import path

# urlpatterns = [
    # path('admin/', admin.site.urls),
# ]

# Added By G.S.Reddy
from django.contrib import admin
from django.urls import path
from crudapp import views

urlpatterns = [
    path('admin/', admin.site.urls),
    path('contacts/', views.IndexView.as_view(), name='index'),
    path('contacts/<int:pk>/', views.ContactDetailView.as_view(), name='detail'),
    path('contacts/edit/<int:pk>/', views.edit, name='edit'),
    path('contacts/create/', views.create, name='create'),
    path('contacts/delete/<int:pk>/', views.delete, name='delete'),
]

----------------------------------------------------------------------------------------------------------------------------------------------------------

(pynewenv) E:\GSReddy\Projects\pynewenv\Scripts\OctaEdX>python manage.py runserver














Next:
-----
https://realpython.com/django-user-management/
https://www.javatpoint.com/django-crud-application **** 
https://www.techiediaries.com/django/django-3-tutorial-and-crud-example-with-mysql-and-bootstrap/ *****
https://adiramadhan17.medium.com/django-crud-with-forms-and-bootstrap-template-73af33d8f016
https://realpython.com/python-sqlite-sqlalchemy/ **
https://realpython.com/location-based-app-with-geodjango-tutorial/ ***
https://www.jetbrains.com/help/pycharm/creating-and-running-your-first-django-project.html ***************
https://iq.opengenus.org/crud-application-with-django/
https://learndjango.com/tutorials/django-search-tutorial ***

https://www.geeksforgeeks.org/django-crud-create-retrieve-update-delete-function-based-views/
https://data-flair.training/blogs/django-crud-example/
https://studygyaan.com/django/django-crud-create-retrieve-update-delete-function-based-views
https://towardsdatascience.com/build-a-django-crud-app-by-using-class-based-views-12bc69d36ab6
https://medium.com/@alex.kirkup/making-error-messages-visible-in-django-forms-1abea48c802a
https://www.sankalpjonna.com/learn-django/building-a-django-crud-application-in-minutes
https://efficientcoder.net/django-3-tutorial-and-crud-example-with-mysql-and-bootstrap/
https://github.com/piinalpin/django-crud-sqlite **** 
https://labpys.com/how-to-execute-the-crud-operation-in-django/
https://www.javatpoint.com/django-crud-example **** 
https://betterprogramming.pub/how-to-build-a-todo-application-with-django-ac675811d77b
https://medium.com/@DashboardsHub/django-soft-ui-system-free-product-7c0c4b270a10

https://www.learnvern.com/python-flask-tutorial/create-operation-using-sqlite-crud
https://subscription.packtpub.com/book/web-development/9781839212505/2/ch02lvl1sec12/django-s-database-crud-operations
https://subscription.packtpub.com/book/web-development/9781839212505/2/ch02lvl1sec09/sql-crud-operations
https://ordinarycoders.com/blog/article/django-react-crud-application
https://codesource.io/crud-application-using-django-and-javascript/
https://www.section.io/engineering-education/django-crud-api/
https://www.bezkoder.com/django-angular-mysql/
https://medium.com/analytics-vidhya/sqlite-database-crud-operations-using-python-3774929eb799
https://medium.com/gitconnected/using-python-oracledb-1-0-with-sqlalchemy-pandas-django-and-flask-5d84e910cb19
https://medium.com/@ruchitkharwa/top-10-best-django-packages-to-use-in-your-next-project-c239c2f0c4eb
https://medium.com/oracledevs/using-the-development-branch-of-sqlalchemy-2-0-with-python-oracledb-d6e89090899c
https://medium.com/datadriveninvestor/flask-dash-or-streamlit-which-framework-to-use-d3b73d688d64
https://medium.com/@cjones-oracle ***

https://medium.com/the-research-nest/creating-a-real-time-data-stream-using-apache-kafka-in-python-132e0e5630d3 **********
https://medium.com/gitconnected/fastapi-fundamentals-getting-faster-with-fastapi-866545b841ca
https://medium.com/@itssouravshrivas/exploratory-data-analysis-of-hotel-booking-demand-a-case-study-4a27bff589ca ******
https://medium.com/gitconnected/using-python-oracledb-1-0-with-sqlalchemy-pandas-django-and-flask-5d84e910cb19
https://medium.com/p/beba787ed7d3 ***
https://medium.com/gitconnected/django-celery-going-deeper-with-background-tasks-in-python-fa44958cf7cd
https://medium.com/@estretyakov/the-ultimate-async-setup-fastapi-sqlmodel-alembic-pytest-ae5cdcfed3d4
https://medium.com/cuddle-ai/async-architecture-with-fastapi-celery-and-rabbitmq-c7d029030377
https://medium.com/@estretyakov/the-ultimate-async-setup-fastapi-sqlmodel-alembic-pytest-ae5cdcfed3d4
https://blog.nubecolectiva.com/como-crear-un-crud-con-django-3-1-python-3-9-y-bootstrap-4-6-parte-2/ ***
https://www.codementor.io/@jadianes/get-started-with-django-building-recommendation-review-app-du107yb1a ***

https://medium.com/dooboolab/prisma-with-python-and-fastapi-33bf25bb20c0
https://medium.com/the-research-nest/creating-a-real-time-data-stream-using-apache-kafka-in-python-132e0e5630d3  ***
https://medium.com/@nurettinabaci/handling-multiple-forms-on-the-same-page-in-django-885d4bf28055
https://medium.com/@gautamankul/tasks-scheduling-in-django-with-redis-and-celery-6d4a1007c273
https://medium.com/@tech_with_mike/django-docker-optimization-with-multi-stage-technique-with-video-73d96669cd2e
https://medium.com/@mateuszjasiski/using-minio-with-django-for-local-development-80bda22927
https://medium.com/better-programming/architecting-django-software-projects-dfe20238bfb2
https://medium.com/@johschmidt42/setting-up-python-projects-part-iii-56aafde8ae0b
https://legionscript.medium.com/function-views-django-rest-framework-crash-course-in-2022-ac97b0be2f86
https://legionscript.medium.com/building-a-social-media-app-with-python-3-django-beginners-tutorial-19-tags-part-2-of-2-76acb235c926
https://legionscript.medium.com/introduction-to-django-rest-framework-in-2022-9b1d1c99c9b5
https://github.com/UskoKruM/django-crud-sqlite3
https://jooble.org/jobs-django


https://legionscript.medium.com/django-channels-3-basics-building-a-simple-app-c4aa29978ca4
Hosting:
--------
https://zappycode.com/tutorials/deploy-django-project-on-pythonanywhere
https://studygyaan.com/django/host-django-website-application-for-free-in-5-minutes
https://django.how/resources/django-deployment-to-pythonanywhere/


Other Links:
https://medium.com/@jackhuang.wz/generate-music-from-scratch-using-python-53c0fedd0031
pip install nltk spacy gensim fastai flaml tpot h2o pycaret statsmodels XGBoost

https://medium.com/curiosity-ai/10-hottest-new-apps-to-explore-immediately-september-2022-e7a356d684ac










References :
https://stackoverflow.com/questions/1534210/use-different-python-version-with-virtualenv
https://docs.python.org/3/library/venv.html
https://www.dataquest.io/blog/a-complete-guide-to-python-virtual-environments/
https://www.roelpeters.be/virtualenv-venv-choose-python-version/
https://www.freecodecamp.org/news/manage-multiple-python-versions-and-virtual-environments-venv-pyenv-pyvenv-a29fb00c296f/

https://freedjango.com/free-django-hosting/
https://freedjango.com/cheap-web-hosting-for-beginners/

